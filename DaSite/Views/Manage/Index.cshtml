@using DaSite.Helpers
@model DaSite.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<div class="bodycontainer">
    <h2>@ViewBag.Title</h2>
    <h4>Change your account settings</h4>

    <p class="text-success">@ViewBag.StatusMessage</p>

    @using (Html.BeginForm("Update", "Manage", FormMethod.Post, new { @class = "form-Horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary("", new { @class = "text-danger" })


            <!--Locational Data-->
            <!--Country-->
            <div class="form-group">
                @Html.LabelFor(m => m.Country, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Country, new SelectList(Model.CounItems, "Text", "Value"))
                </div>
            </div>

            <!--Province-->
            <div class="form-group">
                @Html.LabelFor(m => m.Province, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Province, new SelectList(Model.ProvItems, "Text", "Value"))
                </div>
            </div>
            
            <!--City-->
            <div class="form-group">
                @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control",  @placeholder= Model.City })
                </div>
            </div>
            <!--Postal Code-->

            <!--Personal Data-->
            <!--Ethnicity-->
            <div class="form-group">
                @Html.LabelFor(m => m.Ethnicity, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Ethnicity, new SelectList(Model.EthItems, "Value", "Text"))
                </div>
            </div>

            <!--Gender-->
            <div class="form-group">
                @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Gender, new SelectList(Model.GenderItems, "Text", "Value"))
                </div>
            </div>

            <!--Birth Date-->
            <div class="form-group">
                @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <!--Month-->
                    @Html.DropDownListFor(m => m.Month, new SelectList(Model.MonthItems, "Value", "Text"))
                    <!--Day-->
                    @Html.DropDownListFor(m => m.Day, Enumerable.Range(1, 31).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                    <!--Year-->
                    @Html.DropDownListFor(m => m.Year, Enumerable.Range(0, (1999 - 1907)).Select(i => new SelectListItem { Text = (1999 - i).ToString(), Value = (1999 - i).ToString() }))
                </div>
            </div>

            <!--Personal seeking-->
            <!--Seeking-->
            <div class="form-group">
                @Html.LabelFor(m => m.Seeking, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Seeking, new SelectList(Model.SeekingItems, "Value", "Text"))
                </div>
            </div>
            <!--Tyes-->
            <!--Bio-->
            <div class="form-group">
                @Html.LabelFor(m => m.Bio, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Bio, new { @class = "biobox" })
                </div>
            </div>

            <!--Email-->
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>

            <!--Update buttton-->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Update" />
                </div>
            </div>

            <!--Authentication Options-->
            <div class="" style="border:groove">
                <dl class="dl-horizontal">
                    <dt>Password:</dt>
                    <dd>
                        [
                        @if (Model.HasPassword)
                {
                            @Html.ActionLink("Change your password", "ChangePassword")
                        }
                        else
                        {
                            @Html.ActionLink("Create", "SetPassword")
                        }
                        ]
                    </dd>
                    <dt>External Logins:</dt>
                    <dd>
                        @Model.Logins.Count [
                        @Html.ActionLink("Manage", "ManageLogins") ]
                    </dd>
                    @*
                        <dt>Phone Number:</dt>
                        <dd>
                            @(Model.PhoneNumber ?? "None")
                            @if (Model.PhoneNumber != null)
                            {
                                <br />
                                <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                                using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                                }
                            }
                            else
                            {
                                <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                            }
                        </dd>
                    *@
                    <dt>Two-Factor Authentication:</dt>
                    <dd>
                        <p>
                            Unconfigured -  Under development
                        </p>
                        @*@if (Model.TwoFactor)
                            {
                                using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <text>Enabled
                                    <input type="submit" value="Disable" class="btn btn-link" />
                                    </text>
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <text>Disabled
                                    <input type="submit" value="Enable" class="btn btn-link" />
                                    </text>
                                }
                            }*@
                    </dd>
                </dl>
            </div>
        </div>

    }
</div>
